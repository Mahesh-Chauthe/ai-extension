apiVersion: v1
kind: Namespace
metadata:
  name: extension-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: extension-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: "extension_db"
        - name: POSTGRES_PASSWORD
          value: "password123"
        - name: POSTGRES_USER
          value: "postgres"
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: extension-system
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: extension-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6-alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: extension-system
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: extension-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
    spec:
      containers:
      - name: backend-api
        image: node:18-alpine
        command: ["/bin/sh"]
        args: ["-c", "echo 'Backend running on port 3000'; sleep infinity"]
        ports:
        - containerPort: 3000
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:password123@postgres-service:5432/extension_db"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: JWT_SECRET
          value: "supersecretjwtkey"
        - name: PORT
          value: "3000"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: extension-system
spec:
  selector:
    app: backend-api
  ports:
  - port: 80
    targetPort: 3000